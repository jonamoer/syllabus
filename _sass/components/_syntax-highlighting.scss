/// Syntax Highlighting

// Code Colours
$color-code: (
  base01: #93a1a1,
  base02: #586e75,
  base03: #B58900,
  bg01  : #002b36,
  bg02  : #f4f3f1,
  orange: #cb4b16,
  red   : #dc322f,
  blue  : #268bd2,
  cyan  : #2aa198,
  green : #859900
);

// Code Label Colour
$color-language: (
  bash   : map-get($color-palette, color-A),
  bat    : map-get($color-palette, color-A),
  blade  : map-get($color-palette, color-H),
  code   : map-get($color-palette, color-A),
  css    : map-get($color-palette, color-C),
  default: white,
  emmet  : map-get($color-palette, color-A),
  gherkin: map-get($color-palette, color-E),
  html   : map-get($color-palette, color-B),
  ini    : map-get($color-palette, color-A),
  inky   : map-get($color-palette, color-B),
  json   : map-get($color-palette, color-A),
  js     : map-get($color-palette, color-D),
  php    : map-get($color-palette, color-G),
  po     : map-get($color-palette, color-A),
  ps     : map-get($color-palette, color-A),
  sql    : map-get($color-palette, color-F),
  scss   : map-get($color-palette, color-H),
  ts     : map-get($color-palette, color-F),
  twig   : map-get($color-palette, color-E),
  yaml   : map-get($color-palette, color-D)
);

// Highlight Colours
$base01: map-get($color-code, base01);
$base02: map-get($color-code, base02);
$base03: map-get($color-code, base03);
$bg01  : map-get($color-code, bg01);
$bg02  : map-get($color-code, bg02);
$orange: map-get($color-code, orange);
$red   : map-get($color-code, red);
$blue  : map-get($color-code, blue);
$cyan  : map-get($color-code, cyan);
$green : map-get($color-code, green);

figure.highlight {
  @mixin label($text: "Code", $background: map_get($color-palette, color-G), $text-color: white) {
    position: relative;
    &::after{
      background: $background;
      border-radius: 0 0 0 .3rem;
      color: $text-color;
      content: $text;
      display: inline-block;
      font-family: $font-sans-serif;
      height: 2rem;
      line-height: 2rem;
      padding: 0 .5rem 0 .7rem;
      position: absolute;
      right: 0;
      top: 0;
    }
  }

  margin: 2rem 0;
  overflow: auto;
  &::before {
    content: attr(data-file);
    font-family: $font-code;
    opacity: .5;
    padding-left: 1rem;
    position: absolute;
  }
  &[data-file] {
    > pre {
      padding: 2rem 0 0;
    }
  }
  &.language- {
    &bash {
      @include label("Bash", map-get($color-language, bash), map-get($color-language, default));
    }
    &bat {
      @include label("CMD", map-get($color-language, bat), map-get($color-language, default));
    }
    &blade {
      @include label("Blade", map-get($color-language, blade), map-get($color-language, default));
    }
    &css {
      @include label("CSS", map-get($color-language, css), map-get($color-language, default));
    }
    &emmet {
      @include label("Emmet", map-get($color-language, emmet), map-get($color-language, default));
    }
    &gherkin {
      @include label("Gherkin", map-get($color-language, gherkin), map-get($color-language, default));
    }
    &html {
      @include label("HTML", map-get($color-language, html), map-get($color-language, default));
    }
    &ini {
      @include label("INI", map-get($color-language, ini), map-get($color-language, default));
    }
    &inky {
      @include label("Inky", map-get($color-language, inky), map-get($color-language, default));
    }
    &json {
      @include label("JSON", map-get($color-language, json), map-get($color-language, default));
    }
    &js {
      @include label("JS", map-get($color-language, js), map-get($color-language, default));
    }
    &php {
      @include label("PHP", map-get($color-language, php), map-get($color-language, default))
    }
    &po {
      @include label("PO", map-get($color-language, po), map-get($color-language, default))
    }
    &powershell {
      @include label("PS", map-get($color-language, ps), map-get($color-language, default))
    }
    &scss {
      @include label("SCSS", map-get($color-language, scss), map-get($color-language, default));
    }
    &sql {
      @include label("SQL", map-get($color-language, sql), map-get($color-language, default));
    }
    &ts {
      @include label("TS", map-get($color-language, ts), map-get($color-language, default));
    }
    &twig {
      @include label("Twig", map-get($color-language, twig), map-get($color-language, default));
    }
    &yaml {
      @include label("YAML", map-get($color-language, yaml), map-get($color-language, default));
    }
  }
  pre {
    background-color: inherit;
    border: none;
    border-radius: 0;
    color: inherit;
    padding: 1rem;
    margin: 0;
  }
  code {
    span.file:first-child {
      background-color: $base03;
      border-radius: 0 0 .3rem;
      color: #FFF;
      height: 2rem;
      left: 0;
      line-height: 2rem;
      padding: 0 .7rem 0 .5rem;
      position: absolute;
      top: 0;
    }
  }
  .lineno {
    background-color: rgba(255, 255, 255 , .5);
  }
}